#
# Common Makefile for building RPMs
#

# the pathnames are relative to the subproject directory (e.g. xfwm4/)
# so that e.g. this file is: ../Makefile.common
#

WORKDIR := $(CURDIR)
SPECDIR ?= $(WORKDIR)
SRCRPMDIR ?= $(WORKDIR)/srpm
BUILDDIR ?= $(WORKDIR)
RPMDIR ?= $(WORKDIR)/rpm
SOURCEDIR := $(WORKDIR)


RPM_DEFINES := --define "_sourcedir $(SOURCEDIR)" \
               --define "_specdir $(SPECDIR)" \
               --define "_builddir $(BUILDDIR)" \
               --define "_srcrpmdir $(SRCRPMDIR)" \
               --define "_rpmdir $(RPMDIR)"

help:
	@echo "make rpms        -- generate binary rpm packages"
	@echo "make srpms       -- generate source rpm packages"

DIST_DOM0 ?= fc23

VER_REL := $(shell rpm $(RPM_DEFINES) -q --qf "%{VERSION}-%{RELEASE}\n" --specfile $(SPECFILE)| head -1|sed -e 's/fc../$(DIST_DOM0)/')
NAME := $(shell rpm $(RPM_DEFINES) -q --qf "%{NAME}\n" --specfile $(SPECFILE)| head -1)

URL := $(shell spectool $(RPM_DEFINES) --list-files --source 0 $(SPECFILE) 2> /dev/null| cut -d ' ' -f 2- )
SIG_URL := $(shell spectool $(RPM_DEFINES) --list-files --source 1 $(SPECFILE) 2> /dev/null| cut -d ' ' -f 2- )
ifndef SRC_FILE
ifdef URL
	SRC_FILE := $(notdir $(URL))
endif
endif
ifndef SIG_FILE
ifdef SIG_URL
	SIG_FILE := $(notdir $(SIG_URL))
endif
endif

get-sources: $(SRC_FILE)

keyring := scrypt-trustedkeys.gpg
keyring-file := $(if $(GNUPGHOME), $(GNUPGHOME)/, $(HOME)/.gnupg/)$(keyring)
keyring-import := gpg -q --no-auto-check-trustdb --no-default-keyring --import

$(keyring-file): $(wildcard *-key-*.asc)
	@rm -f $(keyring-file) && $(keyring-import) --keyring $(keyring) $^

# get-sources already handle verification and remove the file(s) when it fails.
# Keep verify-sources target present for compatibility with qubes-builder API.
.PHONY: verify-sources
verify-sources:
	@true

UNTRUSTED_SUFF := .untrusted

$(SIG_FILE): $(keyring-file)
	@wget --no-use-server-timestamps -q -O $@$(UNTRUSTED_SUFF) $(SIG_URL)
	@gpgv --keyring $(keyring) $@$(UNTRUSTED_SUFF) 2>/dev/null || \
        { echo "Wrong signature on $@$(UNTRUSTED_SUFF)!"; exit 1; }
	@mv -f $@$(UNTRUSTED_SUFF) $@

# just drop signature, don't rely on gpg for its verification - use gpgv above for it
$(basename $(SIG_FILE)): $(SIG_FILE)
	@rm -f "$@"
	@gpg --batch --keyring $(keyring) -o $@ $< 2>/dev/null

$(SRC_FILE): $(basename $(SIG_FILE)) $(keyring-file)
	@wget --no-use-server-timestamps -q -O $@ $(URL)
	@sha256sum --quiet -c $< || rm -f $@


.PHONY: clean-sources
clean-sources:
ifneq ($(SRC_FILE), None)
	-rm $(SRC_FILE) $(SIG_FILE)
endif

rpms: rpms-dom0

rpms-vm:

rpms-dom0:
	rpmbuild $(RPM_DEFINES) -bb $(SPECFILE)

srpms:
	rpmbuild $(RPM_DEFINES) -bs $(SPECFILE)

clean:

